{
	"info": {
		"_postman_id": "3e4b5f6a-7c8d-9e0f-1a2b-3c4d5e6f7g8h",
		"name": "Web Scraper API",
		"description": "A collection for testing the Web Scraper API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crawl Website",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"url\": \"https://symfony.com\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/crawler/crawl",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"crawler",
						"crawl"
					]
				},
				"description": "Initiates crawling of a website and returns the ID of the created website entry."
			},
			"response": [
				{
					"name": "Successful Response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"url\": \"https://symfony.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/crawler/crawl",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"crawler",
								"crawl"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"success\",\n    \"message\": \"We are crawling website now.\",\n    \"data\": {\n        \"id\": 1,\n        \"status\": \"waiting\"\n    }\n}"
				},
				{
					"name": "Invalid URL",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"url\": \"not-a-valid-url\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/crawler/crawl",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"crawler",
								"crawl"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"error\",\n    \"message\": \"Validation failed\",\n    \"errors\": {\n        \"url\": \"This value is not a valid URL.\"\n    }\n}"
				},
				{
					"name": "Missing URL",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{base_url}}/api/crawler/crawl",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"crawler",
								"crawl"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"error\",\n    \"message\": \"Validation failed\",\n    \"errors\": {\n        \"url\": \"URL cannot be blank.\"\n    }\n}"
				}
			]
		},
		{
			"name": "List Websites",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/websites?domain=example.com",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"websites"
					],
					"query": [
						{
							"key": "domain",
							"value": "example.com",
							"description": "Optional. Filter websites by domain name"
						}
					]
				},
				"description": "Retrieves a list of all crawled websites. Can be filtered by domain name."
			},
			"response": [
				{
					"name": "Successful Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/websites",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"websites"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"success\",\n    \"message\": \"Websites retrieved successfully\",\n    \"data\": {\n        \"websites\": [\n            {\n                \"id\": 1,\n                \"url\": \"https://example.com\",\n                \"domain\": \"example.com\",\n                \"status\": \"completed\",\n                \"htmlTagCount\": 100,\n                \"requestDuration\": 1.5,\n                \"createdAt\": \"2024-05-05 12:00:00\",\n                \"updatedAt\": \"2024-05-05 12:00:00\"\n            }\n        ]\n    }\n}"
				},
				{
					"name": "Invalid Domain Filter",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/websites?domain=invalid-domain",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"websites"
							],
							"query": [
								{
									"key": "domain",
									"value": "invalid-domain"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"error\",\n    \"message\": \"Validation failed\",\n    \"errors\": {\n        \"domain\": \"Invalid domain format\"\n    }\n}"
				}
			]
		},
		{
			"name": "Show Website",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/websites/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"websites",
						"1"
					]
				},
				"description": "Retrieves details of a specific website by its ID."
			},
			"response": [
				{
					"name": "Successful Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/websites/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"websites",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"success\",\n    \"message\": \"Website retrieved successfully\",\n    \"data\": {\n        \"website\": {\n            \"id\": 1,\n            \"url\": \"https://example.com\",\n            \"domain\": \"example.com\",\n            \"status\": \"completed\",\n            \"htmlTagCount\": 100,\n            \"requestDuration\": 1.5,\n            \"createdAt\": \"2024-05-05 12:00:00\",\n            \"updatedAt\": \"2024-05-05 12:00:00\"\n        }\n    }\n}"
				},
				{
					"name": "Not Found Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/websites/99999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"websites",
								"99999"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"error\",\n    \"message\": \"Website not found\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://weathered-glitter-9529.fly.dev",
			"type": "string"
		}
	]
} 